使用 gost 在 ubunto 上面做二级代理, 第一级 暴露出 ss 给客户端链接, ss 会连接另外的服务器的 sk5 代理, 请给出具体实现
好的，在 Ubuntu 上使用 gost 搭建一个二级代理链，其中第一级提供 Shadowsocks (SS) 服务，并让 SS 连接至第二级的 SOCKS5 代理。这是一个非常常见的场景，可以用于流量中转或规避某些网络限制。

以下是详细的实现步骤：

第 1 步：安装 Gost
首先，你需要在服务器上安装 gost。这里使用官方预编译的二进制文件进行安装，这是最简单的方法。

连接到你的 Ubuntu 服务器（即准备作为一级代理的服务器）。

下载最新版本的 Gost：
访问 Gost 的 GitHub Release 页面 查看最新版本号（例如 X.Y.Z），然后使用 wget 下载。

bash
# 示例：下载 AMD64 架构的版本，请将 X.Y.Z 替换为实际版本号，如 2.11.5
wget https://github.com/ginuerzh/gost/releases/download/vX.Y.Z/gost-linux-amd64-X.Y.Z.gz
解压文件：

bash
gunzip gost-linux-amd64-X.Y.Z.gz
安装到系统路径并赋予可执行权限：

bash
sudo mv gost-linux-amd64-X.Y.Z /usr/local/bin/gost
sudo chmod +x /usr/local/bin/gost
验证安装：

bash
gost -version
如果显示版本号，说明安装成功。

第 2 步：编写 Gost 配置文件
Gost 支持命令行参数和配置文件两种方式。对于复杂的代理链，使用配置文件更清晰、易于管理。我们将创建一个 Systemd 服务来运行 Gost。

创建配置目录和文件：

bash
sudo mkdir -p /etc/gost/
sudo nano /etc/gost/config.yaml
将以下配置内容写入 config.yaml 文件：

yaml
services:
- name: service-0
  addr: :8388  # SS 服务监听的端口，客户端将连接到此端口
  handler:
    type: ss  # 处理器类型为 Shadowsocks
    auth:
      username: your-ss-username  # SS 用户名 (可任意，但建议设置)
      password: your-ss-password  # SS 密码 (请务必修改为强密码)
  listener:
    type: ss  # 监听器类型为 Shadowsocks
  
  # 这里是关键：配置转发器，将 SS 接收到的流量转发到第二级代理
  forwarder:
    nodes:
      - target: your-socks5-server-ip:1080  # 第二级 SOCKS5 代理的地址和端口
        dialer:
          type: socks5  # 使用 SOCKS5 协议连接第二级代理
          auth:
            username: your-socks5-username  # 第二级 SOCKS5 代理的用户名（如无需认证则删除整个 auth 部分）
            password: your-socks5-password  # 第二级 SOCKS5 代理的密码
请务必修改以下字段：

addr: 你可以更改 SS 服务的端口。

auth -> username & password: 设置你的 SS 认证信息。

forwarder -> nodes -> target: 替换为你第二级 SOCKS5 代理服务器的真实 IP 和端口。

forwarder -> nodes -> dialer -> auth: 如果第二级 SOCKS5 代理需要用户名密码认证，请填写。如果不需要，则删除整个 auth 部分。

第 3 步：创建 Systemd 服务
使用 Systemd 来管理 Gost，可以实现开机自启、自动重启、方便查看日志等功能。

创建 Service 文件：

bash
sudo nano /etc/systemd/system/gost.service
将以下内容写入 Service 文件：

ini
[Unit]
Description=GO Simple Tunnel
After=network.target

[Service]
Type=simple
User=root
ExecStart=/usr/local/bin/gost -C /etc/gost/config.yaml  # 指定配置文件路径
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
重新加载 Systemd 配置：

bash
sudo systemctl daemon-reload
第 4 步：启动服务并设置开机自启
启动 Gost 服务：

bash
sudo systemctl start gost
设置开机自动启动：

bash
sudo systemctl enable gost
检查服务状态：

bash
sudo systemctl status gost
如果状态显示为 active (running)，并且没有报错，说明服务已成功启动。

查看实时日志（如果需要排查问题）：

bash
sudo journalctl -u gost -f
第 5 步：配置防火墙（非常重要！）
确保你的 Ubuntu 服务器防火墙开放了 SS 服务所使用的端口（本例中为 8388）。

如果使用 ufw：

bash
sudo ufw allow 8388/tcp
sudo ufw allow 8388/udp # SS 通常使用 TCP，但允许 UDP 也可用于 UDP 转发
sudo ufw reload
如果使用 iptables 或云服务商的安全组，请确保相应端口是开放的。

第 6 步：客户端连接
现在，你可以在你的客户端（如 Windows、macOS、Android 上的 Shadowsocks 客户端）配置连接了。

服务器：你的第一级代理服务器的 IP 地址。

端口：8388（或在配置文件中自定义的端口）。

加密方式：Gost 的 SS 处理默认使用 AEAD_AES_128_GCM 加密。请确保你的客户端也选择相同的加密方式。如果你的客户端没有这个选项，可能需要更新客户端或在 Gost 配置中指定更通用的加密方式（这需要更复杂的配置，请参考 Gost 文档）。

密码：在配置文件中设置的 your-ss-password。

连接成功后，你的所有流量将会走以下路径：
你的设备 -> SS协议 (加密) -> 你的第一级代理服务器 -> SOCKS5协议 -> 第二级代理服务器 -> 目标网站。

故障排除
检查状态：sudo systemctl status gost

查看日志：sudo journalctl -u gost -e 或 sudo journalctl -u gost -f

检查端口监听：sudo netstat -tunlp | grep 8388 查看 gost 是否正在监听指定端口。

检查防火墙：确认服务器防火墙和云服务商安全组都已放行。

检查二级代理信息：确保第二级 SOCKS5 的 IP、端口、用户名和密码填写正确。

通过以上步骤，你应该可以成功在 Ubuntu 上使用 Gost 搭建好所需的二级代理。

